#
# uncrustify config file for the linux kernel
#
# $Id: linux.cfg,v 1.6 2006/02/15 03:24:38 bengardner Exp $
#

indent_with_tabs	= 1		# 1=indent to level only, 2=indent with tabs
input_tab_size		= 8		# original tab size
output_tab_size		= 8		# new tab size
indent_columns		= output_tab_size

indent_label		= 1		# pos: absolute col, neg: relative column
indent_cmt_with_tabs    = false


#
# inter-symbol newlines
#

nl_enum_brace		= remove	# "enum {" vs "enum \n {"
nl_union_brace		= remove	# "union {" vs "union \n {"
nl_struct_brace		= remove	# "struct {" vs "struct \n {"
nl_do_brace 		= remove	# "do {" vs "do \n {"
nl_if_brace 		= remove	# "if () {" vs "if () \n {"
nl_for_brace 		= remove	# "for () {" vs "for () \n {"
nl_else_brace 		= remove	# "else {" vs "else \n {"
nl_while_brace 		= remove	# "while () {" vs "while () \n {"
nl_switch_brace 	= remove	# "switch () {" vs "switch () \n {"
nl_brace_while		= remove	# "} while" vs "} \n while" - cuddle while
nl_brace_else		= remove	# "} else" vs "} \n else" - cuddle else
nl_func_var_def_blk	= 1
nl_fcall_brace		= remove	# "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace		= add		# "int foo() {" vs "int foo()\n{"
# nl_after_return		= TRUE;
# nl_before_case	= 1
nl_enum_leave_one_liners = false
nl_func_leave_one_liners = false
nl_if_leave_one_liners   = false
nl_after_brace_close     = true
nl_after_vbrace_close    = true
nl_after_vbrace_open     = true
nl_after_vbrace_open_empty = true

#
# Source code modifications
#

mod_paren_on_return	= remove	# "return 1;" vs "return (1);"
mod_full_brace_if	= remove	# "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for	= remove	# "for () a--;" vs "for () { a--; }"
mod_full_brace_do	= remove	# "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while	= remove	# "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_nl	= 3		# don't remove if more than 3 newlines


#
# inter-character spacing options
#

# sp_return_paren	= force		# "return (1);" vs "return(1);"
sp_sizeof_paren		= remove	# "sizeof (int)" vs "sizeof(int)"
sp_before_sparen	= force		# "if (" vs "if("
sp_after_sparen		= force		# "if () {" vs "if (){"
sp_after_cast		= remove	# "(int) a" vs "(int)a"
sp_inside_paren         = remove        # "(1 + 1)" vs "( 1 + 1 )"
sp_paren_paren          = remove        # "((a))" vs "( (a) )"
sp_inside_sparen        = remove        # "if (1)" vs "if ( 1 )"
sp_inside_fparens       = remove        # "foo() vs "foo( )"
sp_inside_fparen        = remove        # "foo(bar)" vs "foo( bar )"
sp_inside_braces	= add		# "{ 1 }" vs "{1}"
sp_inside_braces_struct	= add		# "{ 1 }" vs "{1}"
sp_inside_braces_enum	= add		# "{ 1 }" vs "{1}"
sp_assign		= add
sp_arith		= add
sp_bool			= add
sp_compare		= add
sp_assign		= add
sp_after_comma		= add
sp_func_def_paren	= remove	# "int foo (){" vs "int foo(){"
sp_func_call_paren	= remove	# "foo (" vs "foo("
sp_func_proto_paren	= remove	# "int foo ();" vs "int foo();"
sp_before_ptr_star      = add
sp_after_ptr_star       = remove
sp_between_ptr_star     = remove
sp_inside_square        = remove

# Eat away lines
eat_blanks_after_open_brace = false
eat_blanks_before_close_brace = false

#
# Aligning stuff
#

align_with_tabs		= false		# use tabs to align
align_on_tabstop	= true 		# align on tabstops
align_keep_tabs		= false
align_enum_equ_span		= 4		# '=' in enum definition
# align_nl_cont		= TRUE
# align_var_def_span	= 2
# align_var_def_inline	= TRUE
# align_var_def_star	= FALSE
# align_var_def_colon	= TRUE
# align_assign_span	= 1
align_struct_init_span	= 3		# align stuff in a structure init '= { }'
align_right_cmt_span	= 3
align_right_cmt_at_col  = 1
align_pp_define_span	= 8;
align_pp_define_gap	= 4;

# cmt_star_cont		= FALSE

# indent_brace		= 0

#
# Line splitting
#
#code_width              = 80
#ls_for_split_full       = false
#ls_func_split_full      = true

#
# Comment options
#
#cmt_width              = 80
cmt_reflow_mode        = 1
cmt_c_group            = true
cmt_c_nl_start         = true
cmt_c_nl_end           = true
cmt_cpp_group          = true
cmt_cpp_nl_start       = true
cmt_cpp_nl_end         = true
cmt_cpp_to_c           = true
cmt_star_cont          = true

